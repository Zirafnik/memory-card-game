{"version":3,"sources":["components/Score.js","components/Header.js","components/Card.js","components/ImgContainer.js","components/Footer.js","App.js","index.js"],"names":["Score","props","className","score","bestScore","Header","Card","name","onClick","checkAnswer","src","ImgContainer","useState","pokeCards","setPokeCards","useEffect","newOrder","array","i","length","j","Math","floor","random","shuffleArray","listCards","map","pokemon","Footer","target","href","App","currentScore","setCurrentScore","setBestScore","clickedPoke","setClickedPoke","e","includes","getAttribute","console","log","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAUeA,MAVf,SAAeC,GAEX,OACI,sBAAKC,UAAU,QAAf,UACI,wCAAWD,EAAME,SACjB,6CAAgBF,EAAMG,iBCQnBC,MAVf,SAAgBJ,GACZ,OACI,yBAAQC,UAAU,SAAlB,UACI,yDACA,mHACA,cAAC,EAAD,CAAOC,MAAOF,EAAME,MAAOC,UAAWH,EAAMG,gBCGzCE,MATf,SAAcL,GACV,OACI,sBAAKM,KAAMN,EAAMM,KAAMC,QAASP,EAAMQ,YAAaP,UAAU,OAA7D,UACI,qBAAKQ,IAAG,kBAAaT,EAAMM,KAAnB,QAA+BA,KAAMN,EAAMM,OACnD,mBAAGA,KAAMN,EAAMM,KAAf,SAAsBN,EAAMM,WC0BzBI,MA7Bf,SAAsBV,GAClB,IADyB,EAESW,mBADnB,CAAC,aAAc,YAAa,WAAY,WAAY,SAAU,OAAQ,QAAS,SAAU,UAAW,SAAU,UAAW,SAAU,SAAU,YAAa,WAAY,SAD5J,mBAElBC,EAFkB,KAEPC,EAFO,KAIzBC,qBAAU,WACN,IAAIC,EAAS,YAAKH,IAMtB,SAAsBI,GAClB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEhB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFgC,KAE5BD,EAAMG,GAFsB,MAN3CI,CAAaR,GACbF,EAAaE,KACd,CAACf,EAAME,MAAOF,EAAMG,YAUvB,IAAMqB,EAAWZ,EAAUa,KAAI,SAACC,GAAD,OAC3B,cAAC,EAAD,CAAMlB,YAAaR,EAAMQ,YAA2BF,KAAMoB,GAAfA,MAG/C,OACI,qBAAKzB,UAAU,gBAAf,SACKuB,KChBEG,MATf,WACI,OACI,yBAAQ1B,UAAU,SAAlB,UACI,mBAAGA,UAAU,cAAb,sBACA,mBAAG2B,OAAO,SAASC,KAAK,+CAAxB,SAAuE,qBAAK5B,UAAU,eAAeQ,IAAG,6BC8CrGqB,MA7Cf,WAAgB,IAAD,EAC2BnB,mBAAS,GADpC,mBACNoB,EADM,KACQC,EADR,OAEoBrB,mBAAS,GAF7B,mBAENR,EAFM,KAEK8B,EAFL,OAGyBtB,mBAAS,IAHlC,mBAGNuB,EAHM,KAGOC,EAHP,KAkCb,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQC,MAAO6B,EAAc5B,UAAWA,IAExC,cAAC,EAAD,CAAcD,MAAO6B,EAAc5B,UAAWA,EAAWK,YAnB7D,SAAqB4B,GAChBF,EAAYG,SAASD,EAAER,OAAOU,aAAa,UAC5CC,QAAQC,IAAI,SACZD,QAAQC,IAAIJ,EAAER,OAAOU,aAAa,SARjCnC,EAAU4B,GACXE,EAAaF,GALfC,EAAgB,GAedG,EAAe,IACfM,MAAM,eAENF,QAAQC,IAAI,WACZD,QAAQC,IAAIJ,EAAER,OAAOU,aAAa,SAvBpCN,EAAgBD,EAAe,GAyB7BI,EAAe,GAAD,mBAAKD,GAAL,CAAkBE,EAAER,OAAOU,aAAa,eAStD,cAAC,EAAD,QC3CNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d7972e65.chunk.js","sourcesContent":["function Score(props) {\n\n    return(\n        <div className='score'>\n            <p>Score: {props.score}</p>\n            <p>High Score: {props.bestScore}</p>\n        </div>\n    );\n}\n\nexport default Score;","import React from 'react';\nimport Score from './Score';\n\nfunction Header(props) {\n    return (\n        <header className=\"header\">\n            <h1>Pok√©mon Memory Cards</h1>\n            <p>Get points by clicking on images, but dont't click on the same one more than once!</p>\n            <Score score={props.score} bestScore={props.bestScore} />\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Card(props) {\n    return(\n        <div name={props.name} onClick={props.checkAnswer} className=\"card\">\n            <img src={`/images/${props.name}.png`} name={props.name}/>\n            <p name={props.name}>{props.name}</p>\n        </div>\n    );\n}\n\nexport default Card;","import React, {useState, useEffect} from 'react';\nimport Card from './Card';\n\nfunction ImgContainer(props) {\n    let pokeNames= ['charmander', 'bulbasaur', 'squirtle', 'beedrill', 'pidgey', 'abra', 'ekans', 'elekid', 'geodude', 'mewtwo', 'pikachu', 'pinsir', 'togepi', 'cyndaquil', 'magikarp', 'onix'];\n    const [pokeCards, setPokeCards] = useState(pokeNames);\n\n    useEffect(() => {\n        let newOrder= [...pokeCards];\n        shuffleArray(newOrder);\n        setPokeCards(newOrder);\n    }, [props.score, props.bestScore]);\n\n    /* From StackOverflow */\n    function shuffleArray(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    const listCards= pokeCards.map((pokemon) => \n        <Card checkAnswer={props.checkAnswer} key={pokemon} name={pokemon}/>\n    );\n\n    return (\n        <div className=\"img-container\">\n            {listCards}\n        </div>\n    );\n}\n\nexport default ImgContainer;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className='footer'>\n            <p className='footer-text'>Zirafnik</p>\n            <a target='_blank' href='https://github.com/Zirafnik/memory-card-game'><img className='github-image' src={`/images/github.png`}/></a>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, {useState, useEffect} from 'react';\nimport './styles/reset.css';\nimport './styles/App.css';\nimport Header from './components/Header';\nimport ImgContainer from './components/ImgContainer';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] =useState(0);\n  const [clickedPoke, setClickedPoke] = useState([]);\n\n  function incrementScore() {\n    setCurrentScore(currentScore + 1);\n  }\n\n  function resetScore() {\n    setCurrentScore(0);\n  }\n\n  function updateBestScore() {\n    if(bestScore<currentScore) {\n      setBestScore(currentScore);\n    }\n  }\n\n  function checkAnswer(e) {\n    if(clickedPoke.includes(e.target.getAttribute('name'))) {\n      console.log('WRONG');\n      console.log(e.target.getAttribute('name'));\n      updateBestScore();\n      resetScore();\n      setClickedPoke([]);\n      alert('GAME OVER');\n    } else {\n      console.log('CORRECT');\n      console.log(e.target.getAttribute('name'));\n      incrementScore();\n      setClickedPoke([...clickedPoke, e.target.getAttribute('name')]);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Header score={currentScore} bestScore={bestScore} />\n\n      <ImgContainer score={currentScore} bestScore={bestScore} checkAnswer={checkAnswer} />      \n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}